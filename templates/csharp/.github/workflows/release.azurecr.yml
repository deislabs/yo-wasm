name: release
on:
  push:
    branches:
      - main
    tags:
      - "v*"

env:
  ACR_NAME: <%= registryName %>

jobs:
  build:
    name: Build release assets

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install .NET SDK
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 7.0.x
        include-prerelease: true

    - name: Set the release version (tag)
      if: startsWith(github.ref, 'refs/tags/v')
      shell: bash
      run: echo "RELEASE_VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
    - name: Set the release version (main)
      if: github.ref == 'refs/heads/main'
      shell: bash
      run: echo "RELEASE_VERSION=canary" >> $GITHUB_ENV

    - name: Build
      run: dotnet publish -c Release

    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: WasmProject.wasm
        path: bin/Release/net7.0/WasmProject.wasm

  publish:
    name: Push released module to OCI registry
    runs-on: ubuntu-latest
    needs: build
    steps:

    - name: Install wasm-to-oci
      run: |
        mkdir tools
        wget https://github.com/engineerd/wasm-to-oci/releases/download/v0.1.1/linux-amd64-wasm-to-oci -q -O ./tools/wasm-to-oci
        chmod +x ./tools/wasm-to-oci

    - name: Set the release version
      if: startsWith(github.ref, 'refs/tags/v')
      run: echo "RELEASE_VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
    - name: Set the release version
      if: github.ref == 'refs/heads/main'
      run: echo "RELEASE_VERSION=canary" >> $GITHUB_ENV

    - name: Download release assets
      uses: actions/download-artifact@v1
      with:
        name: WasmProject.wasm
        path: ./assets

    - name: Log into registry
      run: az acr login -n ${ACR_NAME} -u ${{ secrets.ACR_SP_ID }} -p ${{ secrets.ACR_SP_PASSWORD }}

    - name: Publish to registry
      run: ./tools/wasm-to-oci push ./assets/WasmProject.wasm ${ACR_NAME}.azurecr.io/<%= moduleName %>:${RELEASE_VERSION}
